name: Java CI/CD for Pahana Edu Billing System

on:
  push:
    branches:
      - Development
      - QA
      - Regression
      - main
  pull_request:
    branches:
      - QA
      - Regression
      - main

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: pahana_edu
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 15

      - name: Verify MySQL connection
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e "USE pahana_edu;"

      - name: Run tests with Maven
        run: mvn test --file pom.xml

  deploy:
    name: Deploy (only on main)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Simulate Deployment
        run: |
          echo "ðŸŽ‰ Deployment started..."
          echo "Deploying to production environment (Tomcat, FTP, server, etc.)"
          echo "âœ… Deployment successful!"
